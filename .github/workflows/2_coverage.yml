name: Code coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  EIA_KEY: ${{secrets.EIA_KEY}}
  EA_API_KEY: ${{secrets.EA_API_KEY}}
  LIMSERVER: ${{secrets.LIMSERVER}}
  LIMUSERNAME: ${{secrets.LIMUSERNAME}}
  LIMPASSWORD: ${{secrets.LIMPASSWORD}}

jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.9' ]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    timeout-minutes: 10

    steps:
      - name: Check out code repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies and package
        run: |
          python -m pip install --upgrade pip        
          pip install -r requirements_dev.txt
          pip install -e .

      - name: Generate coverage report
        run: |
          coverage run -m pytest
          coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          verbose: true
