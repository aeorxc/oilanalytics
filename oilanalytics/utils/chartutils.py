import pandas as pdfrom commodplot import commodplot as cpldef format_chart(plotly_plot, chart_type=None, title=None):    """apply standard formatting to a plotly plot"""    plotly_plot.update_layout({        # shrink margins to maximise plot size        'margin': {'l': 0, 'r': 0, 't': 40, 'b': 0}    })    if chart_type == 'seasonal':        plotly_plot.update_layout({            # reverse traces to get latest dates at the top            'legend': {'traceorder': 'reversed', 'font': {'size': 12}},        })    elif chart_type == 'table':        format_dict = {'height': 30, 'font': {'size': 20}}        plotly_plot.update_traces({'cells': format_dict, 'header': format_dict})        plotly_plot.update_layout({'title': {'text': title, 'font': {'size': 20}}})    return plotly_plotdef seas_chart_weekly(df: pd.DataFrame, series: str, title: str):    fig = cpl.seas_line_plot(df[series], title=title, shaded_range=5, average_line=5, histfreq='W',                             visible_line_years=3)    fig = format_chart(fig, 'seasonal')    return figdef calculate_change_from_prev_week(df_input):    """    calculates absolute and % change from previous week for a given DataFrame    """    df_change = df_input.sort_index().tail(2)    if isinstance(df_change.index, pd.DatetimeIndex):        df_change.index = df_change.index.strftime('%d-%b')    df_change = df_change.T    df_change['Change'] = df_change[df_change.columns[1]] - df_change[df_change.columns[0]]    df_change['%'] = 100 * df_change['Change'] / df_change[df_change.columns[0]]    return df_changedef get_summary_table(df_input):    """    generic method to create a summary table for individual location page    :param df_input: DataFrame to summarise. Must have datetime index    :param dash_table: indicates whether to return a dash table object or a plotly grpah object    :return: plotly graph object table containing summary data    """    df_sum = calculate_change_from_prev_week(df_input)    # format the DataFrame    df_sum = df_sum.round(2)    df_sum.index.rename('Product', inplace=True)    df_sum = df_sum[[df_sum.columns[1], df_sum.columns[0]] + df_sum.columns[2:].tolist()]  # swap first 2 columns    for column in df_sum.columns:        # format into string with 2 decimal places for display        df_sum[column] = df_sum[column].apply(lambda x: '{:.2f}'.format(x))    summary_table = cpl.table_plot(df_sum, chtype='table', formatted_cols=['Change', '%'])    summary_table = format_chart(summary_table, chart_type='table', title='Stocks Summary')    return summary_table