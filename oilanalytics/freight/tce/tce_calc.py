from oilanalytics.freight.tce import tce_consts as constimport pandas as pd## TCE Calculation Notes## https://www.balticexchange.com/content/balticexchange/consumer/en/my-baltic/downloads.htmldef eca_fuel_history(row):    if row.name.year >= 2020: # IMO        return row.VLSFO * row.voyage_noneca + row.MGO * row.voyage_eca    if row.name.year >= 2014: # Pre-IMO        return row.HSFO * row.voyage_noneca + row.MGO * row.voyage_eca    if row.name >= pd.to_datetime('2010-07-06'): # ECA 1%        return row.HSFO * row.voyage_noneca + row.LSFO * row.voyage_eca    else:        return row.HSFO * (row.voyage_noneca + row.voyage_eca)def calc(arb, data):    data['GrossFreight'] = const.dwt[arb] * (data.FlatRate/100) * data.WorldScale    # Rotterdam Port dues    if arb in ['tc2']:        data['GrossFreight'] = data['GrossFreight'] + ((data.RottA + (data.RottB * 1.33639)) * const.grt[arb])    if arb in ['tc5']:        data['GrossFreight'] = data['GrossFreight'] + (const.dwt[arb] * const.rastanura_prem)    data['BunkerCost'] = data.apply(lambda x: eca_fuel_history(x), 1)    return data