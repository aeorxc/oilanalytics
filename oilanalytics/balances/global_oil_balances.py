from datetime import datetimeimport pandas as pdfrom oilanalytics.energyaspects import energyaspects_apidef add_formats(workbook):    # https: // xlsxwriter.readthedocs.io / working_with_colors.html    header_date_format = workbook.add_format({'num_format': 'mmm-yy', 'bg_color': 'blue', 'font_color': 'white'})    header_qtr_format = workbook.add_format({'bg_color': 'blue', 'font_color': 'white'})    mbd_format = workbook.add_format({'num_format': '##,##0.00,'})    formats = {        'header_date_format': header_date_format,        'header_qtr_format': header_qtr_format,        'mbd_format': mbd_format,    }    return formatsdef add_header(header, worksheet, col_mth_start, col_qtr_start, start_year, end_year, formats):    # monthly header    for count, date in header.iterrows():        worksheet.write_datetime(0, col_mth_start + count, datetime.date(date.iloc[0]),                                 cell_format=formats['header_date_format'])    # quarterly header    col_counter = col_qtr_start    for year in range(start_year, end_year + 1):        for i in ['Q1', 'Q2', 'Q3', 'Q4', 'Cal']:            period = '%s%s' % (i, str(year)[-2:]) if i.startswith('Q') else str(year)            worksheet.write(0, col_counter, period, formats['header_qtr_format'])            col_counter += 1def generate_product_page(commod: str, writer, formats: dict):    # need to generate worksheet using pandas    pd.DataFrame([commod]).to_excel(writer, sheet_name=commod, header=False, index=False)    worksheet = writer.sheets[commod]    worksheet.set_column('D:AZ', cell_format=formats['mbd_format'])    column_format = {'format': ('extract_region', 'aspect', 'source'), 'multiindex': True}    df = energyaspects_api.read_commod_balance(commod=commod, geography='WORLD', column_format=column_format)    start_year, end_year = df.index[0].year, df.index[-1].year    years_span = (end_year - start_year) + 1    col_qtr_start = 3    col_mth_start = col_qtr_start + (5 * years_span) + 1    add_header(pd.DataFrame(df.index), worksheet, col_mth_start, col_qtr_start, start_year=start_year,               end_year=end_year,               formats=formats)    row_start = 3    row_counter = row_start    df.T.to_excel(writer, sheet_name=commod, header=False, index=False, startrow=row_start, startcol=col_mth_start)def generate_balance():    ts = datetime.now().strftime('%Y%m%d_%H%Y%M')    workbookname = f'balance_{ts}.xlsx'    writer = pd.ExcelWriter(workbookname, engine='xlsxwriter')    workbook = writer.book    formats = add_formats(workbook)    for commod in ['gasoline']:        generate_product_page(commod, writer, formats)    # # headers    # for col_num, data in enumerate(quarters):    # 	worksheet.write(row, col_num + col, data, yearly_headers)    writer.save()    return workbooknameif __name__ == '__main__':    r = generate_balance()    import os    os.system('start Excel ' + r)