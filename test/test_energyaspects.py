from oilanalytics.energyaspects import energyaspects_apiimport pandas as pddef test_get_all_timeseries_def():    res = energyaspects_api.get_timeseries_def()    assert 1 in res.indexdef test_read_timeseries_1():    res = energyaspects_api.read_timeseries((1530, 1531), date_from=pd.to_datetime('2020-01-01'))    assert isinstance(res.attrs['metadata'], dict)    assert 1530 in res.columns    assert 1531 in res.columnsdef test_read_timeseries_2():    d = (1800, 1801, 5237, 2920)    f = pd.to_datetime('2020-01-01')    ft = 'extract_region.aspect'    res = energyaspects_api.read_timeseries(d, date_from=f, format_title=ft)    assert isinstance(res.attrs['metadata'], dict)    assert 'US.demand' in res.columns    assert 'AP.demand' in res.columnsdef test_detailed_metadata():    res = energyaspects_api.detailed_metadata(4020)    assert res.source.iloc[0] == 'Energy Aspects'def test_commod_balance():    datef = pd.to_datetime('2021-08-01')    res = energyaspects_api.read_commod_balance(commod='gasoline', date_from=datef)    assert '5236' in res.attrs['metadata']    assert '5233' in res.attrs['metadata']def test_extract_region():    m = {'dataset_id': '1800',     'country': '',     'country_iso': '',     'region': 'AP',     'sub_region': '',     'description': 'Monthly gasoline demand for Asia in kb/d' }    res = energyaspects_api.extract_region(m)    assert res == 'AP'    m = {'dataset_id': '4031',     'country': 'US',     'country_iso': 'US',     'region': 'NA',     'sub_region': 'PADD_3',     'description': 'Monthly natural gasoline supply for US PADD3 in kb/d',     }    res = energyaspects_api.extract_region(m)    assert res == 'PADD_3'